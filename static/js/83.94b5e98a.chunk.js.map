{"version":3,"file":"static/js/83.94b5e98a.chunk.js","mappings":"sNAeMA,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESC,EAAAA,EAAAA,IAAU,8CAA8C,KAAD,EAAhE,OAARL,EAAQE,EAAAI,KAAAJ,EAAAK,OAAA,SAEPP,EAASQ,MAAI,OAAAN,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEpBQ,QAAQC,IAAIT,EAAAO,GAAMG,SAAS,yBAAAV,EAAAW,OAAA,GAAAd,EAAA,kBAE9B,kBARc,OAAAJ,EAAAmB,MAAA,KAAAC,UAAA,KAUf,I,kBCoBA,EAtCc,WACZ,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAmB1B,OANAI,EAAAA,EAAAA,YAAU,WACR5B,IACC6B,MAAK,SAAAf,GAAI,OAAIa,EAAWb,EAAK,IAC7BgB,OAAM,SAAAC,GAAG,OAAIf,QAAQgB,MAAMD,EAAI,GAClC,GAAG,KAKDE,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAAAC,SACJT,EAAQU,KAAI,SAAAC,GAAM,OACjBC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACAG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CAAKE,EAAOE,GAAG,KAAGF,EAAOG,SACzBF,EAAAA,EAAAA,MAACG,EAAAA,GAAQ,CAAAN,SAAA,CAAC,iBAAeE,EAAOK,QAAQF,SACxCP,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CAAAR,SAAEE,EAAOO,SACfX,EAAAA,EAAAA,KAACQ,EAAAA,GAAQ,CAAAN,SAAEE,EAAOQ,YAJTR,EAAOE,GAKX,KAKf,C,6JCxCaO,EAAcC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uLAY5Bf,EAAWa,EAAAA,GAAAA,GAASG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,yhBA4BpBR,EAAWM,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qDAKnBN,EAAQI,EAAAA,GAAAA,EAAQK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,6C,2EC9B7B,UAXc,WACZ,OACEhB,EAAAA,EAAAA,KAACa,EAAAA,GAAW,CAAAX,UACVF,EAAAA,EAAAA,KAACoB,EAAAA,GAAS,CAAAlB,UACVF,EAAAA,EAAAA,KAACqB,EAAAA,EAAI,OAKX,C","sources":["services/Api.jsx","components/Card/Card.jsx","components/Card/Card.styled.js","pages/Cards.jsx"],"sourcesContent":["import axios from 'axios';\n\n//Отримання даних звичайним способом\n// export const fetchData = async () => {\n//   try {\n//     const response = await fetch('https://jsonplaceholder.typicode.com/users');\n//     const data = await response.json();\n//     return data;\n//   } catch (error) {\n//     console.log(error.message);\n//   }\n// }\n\n\n//Отримання даних за допомогою axios\nconst fetchData = async () => {\n  try {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n    // console.log(response.data)\n    return response.data\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport default fetchData;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport fetchData from \"../../services/Api\"\nimport { CardList, CardText, Email } from \"./Card.styled\";\n\n\n\nconst Card =  () => {\n  const [records, setrecords] = useState([]);\n\n  //Запит прямо у компоненті\n\n  // useEffect(() => {\n  //   fetch('https://jsonplaceholder.typicode.com/users')\n  //   .then(response => response.json())\n  //   .then(data => setrecords(data))\n  //   .catch(err => console.error(err))\n  // }, []);\n\n  //Запит виконано за допомогою стрілочної функції, винесеної у окремий файл\n\n  useEffect(() => {\n    fetchData()\n    .then(data => setrecords(data))\n    .catch(err => console.error(err))\n  }, [])\n\n  return (\n\n\n    <CardList>\n        {records.map(record => (\n          <li key={record.id}>\n          <h2>{record.id}. {record.name}</h2>\n          <CardText>Company name: {record.company.name}</CardText>\n          <Email>{record.email}</Email>\n          <CardText>{record.website}</CardText>\n          </li>\n        ))}\n      </CardList>\n\n  );\n}\n\n\nexport default Card;\n","import styled from 'styled-components';\n\nexport const SectionCard = styled.section`\n  margin: 50px 0;\n\n  h2 {\n    font-size: 1.5rem;\n    color: #fff;\n    text-shadow: rgba(255, 255, 255, 0.1) -1px -1px 1px,\n      rgba(0, 0, 0, 0.5) 1px 1px 1px;\n  }\n`;\n\n\nexport const CardList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 24px;\n  list-style: none;\n\n  li {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 270px;\n\n  padding: 10px 20px;\n  text-align: center;\n\n  background-color: #00466e1a;\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 8px 16px 0px;\n  backdrop-filter: blur(10px);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    scale: 1.03;\n  }\n  }`\n\nexport const CardText = styled.p`\n  font-size: 18px;\n  color: rgb(14 7 7);\n`\n\nexport const Email = styled.p`\n  font-size: 16px;\n  color: #fff;\n`\n\n\n","import React from 'react';\nimport Card from 'components/Card/Card';\nimport { Container } from 'components/App.styled';\nimport { SectionCard } from 'components/Card/Card.styled';\n\n\nconst Cards = () => {\n  return (\n    <SectionCard>\n      <Container>\n      <Card />\n    </Container>\n    </SectionCard>\n\n  )\n}\n\nexport default Cards\n"],"names":["fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","sent","abrupt","data","t0","console","log","message","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","records","setrecords","useEffect","then","catch","err","error","_jsx","CardList","children","map","record","_jsxs","id","name","CardText","company","Email","email","website","SectionCard","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","Container","Card"],"sourceRoot":""}