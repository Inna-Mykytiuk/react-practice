{"version":3,"file":"static/js/451.a659d0a3.chunk.js","mappings":"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","sources":["components/App.styled.js","components/Button/Button.styled.js","components/Button/Button.jsx","components/auth/AuthRoot.styled.js","components/auth/login/LogIn.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin: 50px auto;\n`;\n\nexport const MainHeader = styled.h1`\n  margin-bottom: 20px;\n`;\n\nexport const SecondaryHeader = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const Container = styled.div`\n  max-width: 100%;\n  padding: 0 150px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const Title = styled.h1`\n  font-size: 26px;\n  font-weight: 700;\n  color: rgb(255, 255, 255);\n  text-align: center;\n  margin: 0px;\n  text-shadow: rgba(255, 255, 255, 0.1) -1px -1px 1px,\n    rgba(0, 0, 0, 0.5) 1px 1px 1px;\n`;\nexport const SecondTitle = styled.h1`\n  font-size: 18px;\n  font-weight: 700;\n  color: rgb(255, 255, 255);\n  text-align: center;\n  margin: 0px;\n  text-shadow: rgba(255, 255, 255, 0.1) -1px -1px 1px,\n    rgba(0, 0, 0, 0.5) 1px 1px 1px;\n`;\n\nexport const Text = styled.p`\n  font-size: 18px;\n  margin-top: 10px;\n  color: rgb(14 7 7);\n  text-align: center;\n`\nexport const LinkText = styled.span`\n  color:#fff;\n  text-shadow: rgba(255, 255, 255, 0.1) -1px -1px 1px,\n    rgba(0, 0, 0, 0.5) 1px 1px 1px;\n    cursor: pointer;\n`\n\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  display: inline;\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: none;\n  width: 10%;\n  text-align: center;\n  margin-top: 20px;\n\n  font-size: 16px;\n  font-weight: 700;\n  text-shadow: rgba(255, 255, 255, 0.1) -1px -1px 1px,\n    rgba(0, 0, 0, 0.5) 1px 1px 1px;\n\n  cursor: pointer;\n  background-color: ${({ selected }) =>\n    selected ? 'rgb(131 108 104)' : 'rgb(228, 195, 173)'};\n  color: ${({ selected }) => (selected ? '#fff' : 'rgb(75, 68, 83)')};\n\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 3px 6px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.isSelected {\n    background-color: rgb(131 108 104);\n    color: #fff;\n  }\n\n  &:hover {\n    background-color: rgb(131 108 104);\n    color: #fff;\n  }\n`;\n","import { StyledButton } from './Button.styled';\n\nexport const Button = ({\n  selected = false,\n  type = 'button',\n  children,\n  className,\n  ...otherProps\n}) => {\n  return (\n    <StyledButton\n      selected={selected}\n      type={type}\n      className={className}\n      {...otherProps}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n","import styled from 'styled-components';\nimport { TextField} from '@mui/material';\n\nexport const Root = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n`\n\nexport const Form = styled.form`\n  /* width: 100%;\n  display: flex;\n  gap: 4px; */\n  flex: 1;\n`;\n\nexport const Field = styled.input`\n  width: 100%;\n  background-color: transparent;\n\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 3px 10px;\n  &:focus-within {\n    border-radius: 5px;\n    color: #fff;\n    fieldset {\n      border: none;\n      outline: none;\n    }\n  }\n\n  &::placeholder {\n    color: #fff;\n    font-size: 16px;\n    font-weight: 700;\n    /* text-shadow: rgba(255, 255, 255, 0.1) -1px -1px 1px,\n      rgba(0, 0, 0, 0.5) 1px 1px 1px; */\n  }\n`;\n\nexport const StyledTextField = styled(TextField)`\n  width: 100%;\n  background-color: transparent;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 3px 10px;\n  color: #fff;\n\n  &:focus-within {\n    border-radius: 5px;\n    color: #fff;\n    fieldset {\n      border: none;\n      outline: none;\n    }\n  }\n\n  &::placeholder {\n    color: #fff;\n    font-size: 16px;\n    font-weight: 700;\n    text-shadow: rgba(255, 255, 255, 0.1) -1px -1px 1px,\n      rgba(0, 0, 0, 0.5) 1px 1px 1px;\n  }\n  &:hover {\n    fieldset {\n      border: none;\n      outline: none;\n    }\n  }\n`;\n\n","// import React from 'react';\nimport { Title, SecondTitle, Text, LinkText } from 'components/App.styled';\nimport {  Form } from '../AuthRoot.styled';\n// import { Button } from 'components/Button/Button';\n\n// const LogIn = ({ setEmail, setPassword }) => {\n//   return (\n//     <>\n//       <Title>Authorization</Title>\n//       <SecondTitle>Enter your login and password</SecondTitle>\n//       <StyledTextField\n//         fullWidth={true}\n//         margin=\"normal\"\n//         label=\"Email\"\n//         variant=\"outlined\"\n//         placeholder=\"Enter your email\"\n//         onChange={e => setEmail(e.target.value)}\n//         autoComplete=\"username\"\n//       />\n//       <StyledTextField\n//         type=\"password\"\n//         fullWidth={true}\n//         margin=\"normal\"\n//         label=\"Password\"\n//         variant=\"outlined\"\n//         placeholder=\"Enter your password\"\n//         onChange={e => setPassword(e.target.value)}\n//         autoComplete=\"current-password\"\n//       />\n//       <Button type=\"submit\" onClick={() => ''}>\n//         LogIn\n//       </Button>\n//       <Text>\n//         Don't have an account? <LinkText>Registration</LinkText>\n//       </Text>\n//     </>\n//   );\n// };\n\n// export default LogIn;\n\nimport {useState, useEffect} from 'react'\nimport { useAuth } from '../auth';\nimport {useNavigate, useLocation} from 'react-router-dom'\nimport React from 'react'\nimport { Button } from 'components/Button/Button';\nimport { TextField } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Section, Container } from 'components/App.styled';\n\nconst defaultTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#FFB3CB',\n    },\n  },\n});\n\n\nconst Login = () => {\n  const [user, setUser] = useState('')\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const auth = useAuth()\n  const navigate = useNavigate()\n  const location = useLocation();\n\n  const redirectPath = location.state?.path || '/profile'\n\n  useEffect(() => {\n    // Reset the input fields when the component mounts\n    setUser('');\n    setEmail('');\n    setPassword('');\n  }, []);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    auth.login({ user, email, password })\n\n    // navigate('/profile')\n    navigate(redirectPath, {replace: true})\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n    <Section>\n      <Container>\n      <Title>Authorization</Title>\n    <SecondTitle>Enter your login and password</SecondTitle>\n    <Form>\n    <TextField\n        required\n        fullWidth\n        id=\"name\"\n        label=\"Name\"\n        autoComplete=\"off\"\n        // autoComplete=\"given-name\"\n        name=\"name\"\n        autoFocus\n        sx={{ boxShadow: 3 }}\n        onChange={(e) => setUser(e.target.value)}\n        type='text'\n        placeholder='Enter your name'\n        value={user}\n        margin=\"normal\"\n        // helperText={\n        //   'Example of valid email address: qwerty1@example.com'\n        // }\n      />\n      <TextField\n        required\n        fullWidth\n        // id=\"email\"\n        label=\"Email\"\n        autoComplete=\"new-email\"\n        // autoComplete=\"given-name\"\n        name=\"email\"\n        autoFocus\n        margin=\"normal\"\n        sx={{ boxShadow: 3 }}\n        onChange={(e) => setEmail(e.target.value)}\n        type='text'\n        placeholder='Enter your email'\n        value={email}\n      />\n      <TextField\n        required\n        fullWidth\n        id=\"password\"\n        label=\"Password\"\n        autoComplete=\"new-password\"\n        // autoComplete=\"given-name\"\n        name=\"password\"\n        autoFocus\n        sx={{ boxShadow: 3 }}\n        onChange={(e) => setPassword(e.target.value)}\n        type='password'\n        placeholder='Enter your password'\n        value={password}\n        margin=\"normal\"\n      />\n      {/* <StyledTextField\n        type=\"password\"\n        fullWidth={true}\n        margin=\"normal\"\n        label=\"Password\"\n        variant=\"outlined\"\n        placeholder=\"Enter your password\"\n        onChange={e => setPassword(e.target.value)}\n        autoComplete=\"new-password\"\n      /> */}\n      <Button type=\"submit\" onClick={handleLogin}>\n        LogIn\n      </Button>\n      <Text>\n      Don't have an account? <LinkText>Registration</LinkText>\n      </Text>\n    </Form>\n\n\n      </Container>\n\n    </Section>\n\n    </ThemeProvider>\n  )\n}\n\nexport default Login\n\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","_templateObject3","_templateObject4","Title","_templateObject5","SecondTitle","_templateObject6","Text","_templateObject7","LinkText","_templateObject8","StyledButton","_ref","selected","_ref2","Button","_ref$selected","_ref$type","type","children","className","otherProps","_objectWithoutProperties","_excluded","_jsx","_objectSpread","Form","TextField","defaultTheme","createTheme","palette","primary","main","_location$state","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","auth","useAuth","navigate","useNavigate","redirectPath","useLocation","state","path","useEffect","handleLogin","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","login","replace","stop","_x","apply","arguments","ThemeProvider","theme","_jsxs","required","fullWidth","id","label","autoComplete","name","autoFocus","sx","boxShadow","onChange","target","value","placeholder","margin","onClick"],"sourceRoot":""}