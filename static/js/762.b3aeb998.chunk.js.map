{"version":3,"file":"static/js/762.b3aeb998.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/auth/login/LogIn.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  display: inline;\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: none;\n  width: 10%;\n  text-align: center;\n  margin-top: 20px;\n\n  font-size: 16px;\n  font-weight: 700;\n  text-shadow: rgba(255, 255, 255, 0.1) -1px -1px 1px,\n    rgba(0, 0, 0, 0.5) 1px 1px 1px;\n\n  cursor: pointer;\n  background-color: ${({ selected }) =>\n    selected ? 'rgb(131 108 104)' : 'rgb(228, 195, 173)'};\n  color: ${({ selected }) => (selected ? '#fff' : 'rgb(75, 68, 83)')};\n\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 3px 6px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.isSelected {\n    background-color: rgb(131 108 104);\n    color: #fff;\n  }\n\n  &:hover {\n    background-color: rgb(131 108 104);\n    color: #fff;\n  }\n`;\n","import { StyledButton } from './Button.styled';\n\nexport const Button = ({\n  selected = false,\n  type = 'button',\n  children,\n  className,\n  ...otherProps\n}) => {\n  return (\n    <StyledButton\n      selected={selected}\n      type={type}\n      className={className}\n      {...otherProps}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n","// import React from 'react';\n// import { Title, SecondTitle, Text, LinkText } from 'components/App.styled';\n// import { StyledTextField } from '../AuthRoot.styled';\n// import { Button } from 'components/Button/Button';\n\n// const LogIn = ({ setEmail, setPassword }) => {\n//   return (\n//     <>\n//       <Title>Authorization</Title>\n//       <SecondTitle>Enter your login and password</SecondTitle>\n//       <StyledTextField\n//         fullWidth={true}\n//         margin=\"normal\"\n//         label=\"Email\"\n//         variant=\"outlined\"\n//         placeholder=\"Enter your email\"\n//         onChange={e => setEmail(e.target.value)}\n//         autoComplete=\"username\"\n//       />\n//       <StyledTextField\n//         type=\"password\"\n//         fullWidth={true}\n//         margin=\"normal\"\n//         label=\"Password\"\n//         variant=\"outlined\"\n//         placeholder=\"Enter your password\"\n//         onChange={e => setPassword(e.target.value)}\n//         autoComplete=\"current-password\"\n//       />\n//       <Button type=\"submit\" onClick={() => ''}>\n//         LogIn\n//       </Button>\n//       <Text>\n//         Don't have an account? <LinkText>Registration</LinkText>\n//       </Text>\n//     </>\n//   );\n// };\n\n// export default LogIn;\n\nimport {useState, useEffect} from 'react'\nimport { useAuth } from '../auth';\nimport {useNavigate, useLocation} from 'react-router-dom'\nimport React from 'react'\nimport { Button } from 'components/Button/Button';\nimport { TextField } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst defaultTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#FFB3CB',\n    },\n  },\n});\n\n\nconst Login = () => {\n  const [user, setUser] = useState('')\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const auth = useAuth()\n  const navigate = useNavigate()\n  const location = useLocation();\n\n  const redirectPath = location.state?.path || '/profile'\n\n  useEffect(() => {\n    // Reset the input fields when the component mounts\n    setUser('');\n    setEmail('');\n    setPassword('');\n  }, []);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    auth.login({ user, email, password })\n\n    // navigate('/profile')\n    navigate(redirectPath, {replace: true})\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <TextField\n        required\n        fullWidth\n        id=\"name\"\n        label=\"Name\"\n        // autoComplete=\"given-name\"\n        name=\"name\"\n        autoFocus\n        sx={{ boxShadow: 3 }}\n        onChange={(e) => setUser(e.target.value)}\n        type='text'\n        placeholder='Enter your name'\n        value={user}\n        // helperText={\n        //   'Example of valid email address: qwerty1@example.com'\n        // }\n      />\n      <TextField\n        required\n        fullWidth\n        id=\"email\"\n        label=\"Email\"\n        // autoComplete=\"given-name\"\n        name=\"email\"\n        autoFocus\n        sx={{ boxShadow: 3 }}\n        onChange={(e) => setEmail(e.target.value)}\n        type='text'\n        placeholder='Enter your email'\n        value={email}\n        // helperText={\n        //   'Example of valid email address: qwerty1@example.com'\n        // }\n      />\n      <TextField\n        required\n        fullWidth\n        id=\"password\"\n        label=\"Password\"\n        // autoComplete=\"given-name\"\n        name=\"password\"\n        autoFocus\n        sx={{ boxShadow: 3 }}\n        onChange={(e) => setPassword(e.target.value)}\n        type='password'\n        placeholder='Enter your password'\n        value={password}\n        // helperText={\n        //   'Example of valid email address: qwerty1@example.com'\n        // }\n      />\n      <Button type=\"submit\" onClick={handleLogin}>\n        LogIn\n      </Button>\n    </ThemeProvider>\n  )\n}\n\nexport default Login\n\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","_ref","selected","_ref2","Button","_ref$selected","_ref$type","type","children","className","otherProps","_objectWithoutProperties","_excluded","_jsx","_objectSpread","defaultTheme","createTheme","palette","primary","main","_location$state","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","auth","useAuth","navigate","useNavigate","redirectPath","useLocation","state","path","useEffect","handleLogin","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","login","replace","stop","_x","apply","arguments","_jsxs","ThemeProvider","theme","TextField","required","fullWidth","id","label","name","autoFocus","sx","boxShadow","onChange","target","value","placeholder","onClick"],"sourceRoot":""}